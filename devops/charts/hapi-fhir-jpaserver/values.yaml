# Default values for hapi-fhir-jpaserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: hapiproject/hapi
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

spring:
  datasource:
    url: 'jdbc:postgresql://hapi-fhir-jpaserver-postgresql:5432/hapi_dstu3'
    username: admin
    password: admin
    driverClassName: org.postgresql.Driver
    
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "hapi-fhir-jpaserver"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8090

ingress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: traefik
  hosts:
    - host: jpaserver.hapi.127.0.0.1.nip.io
      paths:
      - path: /
        pathType: Prefix
        # backend:
        #   serviceName: hapi-fhir-postgres-postgresql
        #   servicePort: 5432
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 512m
    memory: 1Gi
  requests:
    cpu: 300m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


postgresql:
  # enable an included PostgreSQL DB.
  # if set to `false`, the values under `webApi.db` are used
  enabled: true
  # update the default Postgres version to 13.3
  # name of the database to create
  # see: <https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#creating-a-database-on-first-run>
  nameOverride: ""
  postgresqlUsername: admin
  postgresqlDatabase: "hapi_dstu3"
  postgresqlPassword: admin
  port: 5432
  volumePermissions:
    enabled: true
  audit:
    logConnections: true
    logDisconnections: true
  # Name of existing secret to use for PostgreSQL passwords.
  # The secret has to contain the keys `postgresql-password`
  # which is the password for `postgresqlUsername` when it is
  # different of `postgres`, `postgresql-postgres-password` which
  # will override `postgresqlPassword`, `postgresql-replication-password`
  # which will override `replication.password` and `postgresql-ldap-password`
  # which will be sed to authenticate on LDAP. The value is evaluated as a template.
  replication:
    # should be true for production use
    enabled: false
    # number of read replicas
    readReplicas: 1
    # set synchronous commit mode: on, off, remote_apply, remote_write and local
    synchronousCommit: "on"
    # from the number of `readReplicas` defined above, set the number of those that will have synchronous replication
    numSynchronousReplicas: 1
  metrics:
    # should also be true for production use
    enabled: false
    serviceMonitor:
      # create a Prometheus Operator ServiceMonitor resource
      enabled: false
      # the labels used for Prometheus autodiscover, e.g. could be `release: prometheus`
      additionalLabels: {}
  containerSecurityContext: # +doc-gen:ignore
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

# readiness probe
readinessProbe: # +doc-gen:ignore
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 20
# startup probe
startupProbe: # +doc-gen:ignore
  failureThreshold: 10
  initialDelaySeconds: 60
  periodSeconds: 30
  successThreshold: 1
  timeoutSeconds: 30

# only used if `postgresql.enabeld=false`
externalDatabase:
  # Database host
  host: localhost
  # non-root Username for FHIR Database
  user: fhir
  # Database password
  password: ""
  # Name of an existing secret resource containing the DB password in a 'postgresql-password' key
  existingSecret: ""
  # Database name
  database: hapi_dstu3
  # Database port number
  port: 5432